snippet #!
abbr    #!/bin/sh
alias   shebang
options head
	#!/bin/${1:sh}
	${0}


snippet if
	if [ ${1:#:condition} ]; then
		${0:TARGET}
	fi


snippet el
	else
		${0:TARGET}


snippet elif
	elif [ ${1:#:condition} ]; then
		${0:TARGET}


snippet for
	for ${1:i} in ${2:#:words}; do
		${0:TARGET}
	done

snippet while
alias wh
	while ${1:#:condition} ; do
		${0:TARGET}
	done


snippet until
	until ${1:#:condition} ; do
		${0:TARGET}
	done


snippet heredoc
alias   h <<
	<< ${1:EOF}
		${0:#:TARGET}
	$1

snippet env
	#!/usr/bin/env ${1}


snippet tmp
	${1:TMPFILE}=$(mktemp ${2:XXX})
	trap "rm -f '${$1}'" 0               # EXIT
	trap "rm -f '${$1}'; exit 1" 2       # INT
	trap "rm -f '${$1}'; exit 1" 1 15    # HUP TERM
	${0}

snippet function
alias func
	${1:#:name}()
	{
		${0:TARGET}
	}

snippet     match-regexp
abbr        =~
options     head
	if [[ $${1:string} =~ ${2:^regexp.*} ]]; then
		${0}
	fi

snippet     assign
abbr        var-assign
options     head
	${1:name}="${2:something}"

snippet     case
options     head
	case "$${1:{name\}}" in
		${2:pattern*})
			${0}
			;;
		*)
			${3:echo "$$1 Didn't match anything"}
	esac

snippet     warn
options     head
	echo "${0:TARGET}" 1>&2

snippet     abort
options     head
	echo "${0:TARGET}" 1>&2
	exit 1

snippet		base
options		head
	#!/usr/bin/env bash

	set -Eeuo pipefail
	trap cleanup SIGINT SIGTERM ERR EXIT

	script_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)

	usage() {
	    cat <<EOF
	Usage: $(basename "${BASH_SOURCE[0]}") [-h] [-v] [-f] -p param_value arg1 [arg2...]

	Script description here.

	Available options:

	-h, --help      Print this help and exit
	-v, --verbose   Print script debug info
	-f, --flag      Some flag description
	-p, --param     Some param description
	EOF
	    exit
	}

	cleanup() {
	    trap - SIGINT SIGTERM ERR EXIT
	    # script cleanup here
	}

	setup_colors() {
	    if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
	        NOFORMAT='\033[0m' RED='\033[0;31m' GREEN='\033[0;32m' ORANGE='\033[0;33m' BLUE='\033[0;34m' PURPLE='\033[0;35m' CYAN='\033[0;36m' YELLOW='\033[1;33m'
	    else
	        NOFORMAT='' RED='' GREEN='' ORANGE='' BLUE='' PURPLE='' CYAN='' YELLOW=''
	    fi
	}

	msg() {
	    echo >&2 -e "${1-}"
	}

	die() {
	    local msg=$1
	    local code=${2-1} # default exit status 1
	    msg "$msg"
	    exit "$code"
	}

	parse_params() {
	    # default values of variables set from params
	    flag=0
	    param=''

	    while :; do
	        case "${1-}" in
	        -h | --help) usage ;;
	        -v | --verbose) set -x ;;
	        --no-color) NO_COLOR=1 ;;
	        -f | --flag) flag=1 ;; # example flag
	        -p | --param) # example named parameter
	            param="${2-}"
	            shift
	            ;;
	        -?*) die "Unknown option: $1" ;;
	        *) break ;;
	        esac
	        shift
	    done

	    args=("$@")

	    # check required params and arguments
	    [[ -z "${param-}" ]] && die "Missing required parameter: param"
	    [[ ${#args[@]} -eq 0 ]] && die "Missing script arguments"

	    return 0
	}

	parse_params "$@"
	setup_colors

	# script logic here

	msg "${RED}Read parameters:${NOFORMAT}"
	msg "- flag: ${flag}"
	msg "- param: ${param}"
	msg "- arguments: ${args[*]-}"
